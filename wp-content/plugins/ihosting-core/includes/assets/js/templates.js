(function ($, vc) {	$(document).ready(function () {		if ( ! window.vc || ! window.vc.storage ) {			return;		}	});		if ( ! window.vc || ! window.vc.shortcode_view ) {		return;	}	if ( ! vc || ! vc.shortcode_view ) {		return;	}	window.VcTemplateraModel = Backbone.Model.extend({		getParam: function (key) {			return _.isObject(this.get('params')) && !_.isUndefined(this.get('params')[key]) ? this.get('params')[key] : '';		}	});	window.VcTemplatera = vc.shortcode_view.extend({		render: function () {			window.VcTemplatera.__super__.render.call(this);			this.$wrapper = this.$el.find('> .wpb_element_wrapper');			$('<div class="vct_cover"/>').insertBefore(this.$wrapper);			return this;		},		changeShortcodeParams: function (model) {			var params = model.get('params');			window.VcTemplatera.__super__.changeShortcodeParams.call(this, model);			if (_.isObject(params) && _.isString(params.id)) {				this.$wrapper.html('<img src="images/wpspin_light.gif" title="Loading..." class="templatera_loader">');				$.ajax({					type: 'post',					url: window.ajaxurl,					data: {						action: 'wpb_template_manager_load_html',						id: params.id,						_vcnonce: window.vcAdminNonce					},					context: this				}).done(function (data_string) {					// var parent_model = vc.shortcodes.get(this.model.get('parent_id')),					// row = parent_model.get('parent_id') ? vc.app.views[parent_model.get('parent_id')] : false;					this.$wrapper.html('');					var data = vc.storage.parseContent({}, data_string);					_.each(data, function (shortcode) {						var model = new VcTemplateraModel(shortcode);						this.appendShortcode(model);					}, this);					// row && row.changedContent();				});			} else {				this.$wrapper.html('');			}		},		appendShortcode: function (model) {			var view = this.getView(model),				position = model.get('order'),				$element_to_add = model.get('parent_id') !== false ?					vc.app.views[model.get('parent_id')].$content : this.$wrapper;			vc.app.views[model.id] = view;			if (model.get('parent_id')) {				var parent_view = vc.app.views[model.get('parent_id')];				parent_view.unsetEmpty();			}			$element_to_add.append(view.render().el);			view.ready();			view.changeShortcodeParams(model); // Refactor			view.checkIsEmpty();		},		getView: function (model) {			var view;			if (_.isObject(vc.map[model.get('shortcode')]) && _.isString(vc.map[model.get('shortcode')].js_view) && vc.map[model.get('shortcode')].js_view.length) {				view = new window[window.vc.map[model.get('shortcode')].js_view]({model: model});			} else {				view = new vc.shortcode_view({model: model});			}			return view;		},		changedContent: function () {			this.$wrapper.find('.templatera_loader').remove();		}	});	window.KtSaveTemplate = Backbone.View.extend({		initialize: function() {			vc.shortcodes.bind('add', this.addShortcode, this);			vc.shortcodes.bind('reset', this.resetShortcode, this);			this.modal_template =				$('<div class="vc_ui-font-open-sans vc_ui-panel-window vc_media-xs vc_ui-panel vc_media-sm vc_media-md vc_media-lg ui-draggable ui-resizable" data-vc-panel=".vc_ui-panel-header-header" data-vc-ui-element="panel-view-element" id="vc_ui-panel-view-element"><div class="vc_ui-panel-window-inner"><div class="vc_ui-post-settings-header-container vc_ui-panel-header-container vc_ui-panel-header-o-stacked-bottom ui-draggable-handle" data-vc-ui-element="panel-heading"><div class="vc_ui-panel-header"><div class="vc_ui-panel-header-controls"><button type="button" class="vc_general vc_ui-control-button vc_ui-close-button" data-vc-ui-element="button-close"><i class="vc_ui-icon-pixel vc_ui-icon-pixel-close"> </i></button></div><div class="vc_ui-panel-header-header vc_ui-grid-gap" data-vc-panel-container=".vc_ui-panel-header-container"><h3 class="vc_ui-panel-header-heading" data-vc-ui-element="panel-title">Shortcode</h3></div></div></div><div class="vc_ui-panel-content-container"><div class="vc_ui-panel-content vc_properties-list vc_edit_form_elements"><div class="wpb_element_label">Template Title</div><div class="edit_form_line"><input name="el_class" placeholder="Enter the title of template" class="wpb_vc_param_value wpb-textinput el_class textfield" type="text" value=""></div><div class="wpb_element_label">Template Content</div><textarea style="width:100%;min-height:200px;resize: none;" onfocus="this.select();" readonly="readonly"></textarea></div></div><div class="vc_ui-panel-footer-container" data-vc-ui-element="panel-footer"><div class="vc_ui-panel-footer"><div class="vc_ui-button-group"><span class="vc_general vc_ui-button vc_ui-button-default vc_ui-button-shape-rounded vc_ui-button-fw" data-vc-ui-element="button-close">Close</span><span class="vc_general vc_ui-button vc_ui-button-action vc_ui-button-shape-rounded vc_ui-button-fw" data-vc-ui-element="button-save">Save changes</span></div></div></div></div></div>');			this.modal_template.find( '[data-vc-ui-element="button-close"]' ).on('click', function () {				jQuery(this).closest('.vc_active').removeClass("vc_active");			});			this.modal_template.find( '[data-vc-ui-element="button-save"]' ).on('click', function () {				var $container = $(this).closest('[data-vc-ui-element="panel-view-element"]');				var $content = $container.find('textarea').text();				var $title   = $container.find('input.wpb-textinput').val();				if( ! $title || ! $content ) return;				$.ajax({					type: 'POST',					url: window.ajaxurl,					data: {						action: 'vc_template_save_template',						template_name: $title,						template : $content,						_vcnonce: window.vcAdminNonce					},					dataType: 'html'				}).done(function () {					$container.removeClass("vc_active");				});			});			$('body').append(this.modal_template);		},		addShortcode: function(model){			this.addButton(model);		},		resetShortcode: function(shortcodes){			var that = this;			_.each(shortcodes.models,function(model){				that.addButton(model);			});		},		addButton: function(model){			var that = this;			var el = $('[data-model-id="'+model.get('id')+'"]');			//For column			el.find('.vc_controls').each(function(){				if( ! $(this).find('[data-vc-control="view"]').length ){					$('<a class="vc_control save_template column_view vc_column" href="#" title="Save Template" data-vc-control="view"><i class="vc_icon"></i></a>').insertBefore($(this).find('.column_edit'));				}			});			//For control shortcode			el.find('.vc_controls').each(function(){				if( ! $(this).find('[data-vc-control="view"]').length ){					$('<a class="vc_control-btn save_template vc_control-btn-view" href="#" title="Save Template" data-vc-control="view"><span class="vc_btn-content"><span class="icon"></span></span></a>').insertBefore($(this).find('.vc_control-btn-edit'));				}			});			//For row			el.find('.vc_row_edit_clone_delete').each(function () {				if( ! $(this).find('[data-vc-control="view"]').length ){					$('<a class="vc_control save_template column_view vc_row" href="#" title="Save Template" data-vc-control="view"><i class="vc_icon"></i></a>').insertBefore($(this).find('.column_edit'));				}			});			$('[data-vc-control="view"]').on('click',function(e){				e.stopPropagation();				e.preventDefault();				var parent = $(this).closest('[data-model-id]').data('model');				var models = _.filter(_.values(vc.storage.data), function (model) {					return model.id === parent.id;				});				models = _.sortBy(models, function (model) {					return model.order;				});				var content = _.reduce(models, function (memo, model) {					model.html = that.createShortcodeString(model);					return memo + model.html;				}, '', this);				//console.log(model);				$(that.modal_template).find('textarea').text(content);				$(that.modal_template).removeClass("vc_active").eq(0).addClass("vc_active");			});		},		createShortcodeString:function (model) {			var params = _.extend({}, model.params),				params_to_string = {};			_.each(params, function (value, key) {				if (key !== 'content' && !_.isEmpty(value)) params_to_string[key] = this.escapeParam(value);			}, this);			var content = this._getShortcodeContent(model),				is_container = _.isObject(vc.map[model.shortcode]) && _.isBoolean(vc.map[model.shortcode].is_container) && vc.map[model.shortcode].is_container === true;			if(!is_container  && _.isObject(vc.map[model.shortcode]) && !_.isEmpty(vc.map[model.shortcode].as_parent)) is_container = true;			return wp.shortcode.string({				tag:model.shortcode,				attrs:params_to_string,				content:content,				type:!is_container && _.isUndefined(params.content) ? 'single' : ''			});		},		escapeParam:function (value) {			return value.replace(/"/g, '``');		},		unescapeParam:function (value) {			return value.replace(/(\`{2})/g, '"');		},		_getShortcodeContent:function (parent) {			var that = this,				models = _.sortBy(_.filter(vc.storage.data, function (model) {					// Filter children					return model.parent_id === parent.id;				}), function (model) {					// Sort by `order` field					return model.order;				}),				params = {};			_.extend(params, parent.params);			if (!models.length) {				if(!_.isUndefined(window.switchEditors) && _.isString(params.content) && window.switchEditors.wpautop(params.content)===params.content) {					params.content = window.vc_wpautop(params.content);				}				return _.isUndefined(params.content) ? '' : params.content;			}			return _.reduce(models, function (memo, model) {				return memo + that.createShortcodeString(model);			}, '');		}	});	$(function(){		var save_template = new window.KtSaveTemplate();	});})(window.jQuery, window.vc);